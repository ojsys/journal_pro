# Generated by Django 5.1.3 on 2024-11-15 17:20

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('publication_date', models.DateField()),
                ('is_special_issue', models.BooleanField(default=False)),
                ('special_issue_title', models.CharField(blank=True, max_length=200, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('abstract', models.TextField()),
                ('keywords', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('manuscript_file', models.FileField(upload_to='manuscripts/%Y/%m/')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('UNDER_REVIEW', 'Under Review'), ('REVISION_REQUIRED', 'Revision Required'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('PUBLISHED', 'Published'), ('RETRACTED', 'Retracted')], default='DRAFT', max_length=20)),
                ('submission_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('acceptance_date', models.DateTimeField(blank=True, null=True)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('doi', models.CharField(blank=True, max_length=100, null=True)),
                ('page_numbers', models.CharField(blank=True, max_length=50)),
                ('citation_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('requires_ethics_statement', models.BooleanField(default=False)),
                ('ethics_statement', models.TextField(blank=True)),
                ('competing_interests', models.TextField(blank=True)),
                ('funding_information', models.TextField(blank=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_articles', to=settings.AUTH_USER_MODEL)),
                ('co_authors', models.ManyToManyField(blank=True, related_name='coauthored_articles', to=settings.AUTH_USER_MODEL)),
                ('corresponding_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corresponding_articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='ArticleFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='article_files/%Y/%m/')),
                ('file_type', models.CharField(choices=[('MANUSCRIPT', 'Manuscript'), ('FIGURE', 'Figure'), ('TABLE', 'Table'), ('SUPPLEMENT', 'Supplementary Material'), ('REVISION', 'Revision'), ('RESPONSE', 'Response to Reviewers')], max_length=20)),
                ('version', models.PositiveIntegerField(default=1)),
                ('description', models.TextField(blank=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_files', to='journal_app.article')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-upload_date', '-version'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='supplementary_files',
            field=models.ManyToManyField(blank=True, related_name='supplementary_to', to='journal_app.articlefile'),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ENGLISH', 'Department of English'), ('LITERARY', 'Literary Studies'), ('GST', 'General Studies')], max_length=100, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('established_date', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField()),
                ('website_title', models.CharField(max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='department_logos/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('head_of_dept', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_department', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('details', models.TextField()),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='journal_app.department')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='journal_app.department'),
        ),
        migrations.CreateModel(
            name='DepartmentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_guidelines', models.TextField()),
                ('review_guidelines', models.TextField()),
                ('publication_frequency', models.CharField(max_length=100)),
                ('peer_review_type', models.CharField(choices=[('DOUBLE_BLIND', 'Double Blind'), ('SINGLE_BLIND', 'Single Blind'), ('OPEN', 'Open Review')], max_length=50)),
                ('max_reviewers_per_article', models.PositiveIntegerField(default=3)),
                ('review_deadline_days', models.PositiveIntegerField(default=30)),
                ('allow_public_submissions', models.BooleanField(default=True)),
                ('require_author_registration', models.BooleanField(default=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('theme_color', models.CharField(default='#000000', max_length=7)),
                ('enable_doi', models.BooleanField(default=False)),
                ('enable_plagiarism_check', models.BooleanField(default=False)),
                ('enable_author_tracking', models.BooleanField(default=True)),
                ('notification_settings', models.JSONField(default=dict)),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='journal_app.department')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='issue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issue_articles', to='journal_app.issue'),
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('issn', models.CharField(blank=True, max_length=9, null=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='journal_covers/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journals', to='journal_app.department')),
                ('editor_in_chief', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_journals', to=settings.AUTH_USER_MODEL)),
                ('editorial_board', models.ManyToManyField(related_name='board_member_of', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='journal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_articles', to='journal_app.journal'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('AUTHOR', 'Author'), ('REVIEWER', 'Reviewer'), ('EDITOR', 'Editor'), ('DEPT_ADMIN', 'Department Administrator'), ('ADMIN', 'Administrator')], default='AUTHOR', max_length=20)),
                ('institution', models.CharField(max_length=200)),
                ('academic_title', models.CharField(blank=True, max_length=100)),
                ('bio', models.TextField(blank=True)),
                ('expertise', models.CharField(blank=True, max_length=200)),
                ('orcid_id', models.CharField(blank=True, max_length=20)),
                ('public_email', models.EmailField(blank=True, max_length=254)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('reviews_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('departments', models.ManyToManyField(related_name='members', to='journal_app.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField()),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('comments_to_editor', models.TextField()),
                ('comments_to_author', models.TextField()),
                ('recommendation', models.CharField(choices=[('ACCEPT', 'Accept'), ('MINOR_REVISION', 'Minor Revision'), ('MAJOR_REVISION', 'Major Revision'), ('REJECT', 'Reject')], max_length=20)),
                ('is_complete', models.BooleanField(default=False)),
                ('review_form_responses', models.JSONField(blank=True, null=True)),
                ('confidential_comments', models.TextField(blank=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_reviews', to='journal_app.article')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewer_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-assigned_date'],
                'unique_together': {('article', 'reviewer')},
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('recipient', models.EmailField(max_length=254)),
                ('content', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=20)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='journal_app.department')),
                ('related_article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='journal_app.article')),
                ('related_review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='journal_app.review')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='review_attachments/%Y/%m/')),
                ('description', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_files', to='journal_app.review')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('year', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volumes', to='journal_app.journal')),
            ],
            options={
                'ordering': ['-year', '-number'],
                'unique_together': {('journal', 'number')},
            },
        ),
        migrations.AddField(
            model_name='issue',
            name='volume',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='journal_app.volume'),
        ),
        migrations.AddField(
            model_name='article',
            name='volume',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='volume_articles', to='journal_app.volume'),
        ),
        migrations.AlterUniqueTogether(
            name='issue',
            unique_together={('volume', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='article',
            unique_together={('journal', 'slug')},
        ),
    ]
